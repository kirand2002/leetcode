#--------reverse sentence
# str=input("enter the string")
# def revsen(str):
#     nword=""
#     nsen=""
#     str=str+" "
#     i=0
#     while i<len(str):
#         if str[i]!=" ":
#             nword=str[i]+nword
#
#
#         elif nword!="":
#             if nsen=="":
#                 nsen=nsen+nword
#                 nword=""
#             else:
#                 nsen=nsen+" "+nword
#                 nword=""
#
#         i+=1
#     return nsen
# print(revsen(str))
#
#wap to revese position of words in sentence
# def revpos(str):
#     newword=""
#     newsen=""
#     str=str+" "
#     i=0
#     while i<len(str):
#         if str[i]!=" ":
#             newword=newword+str[i]
#         elif newword!="":
#             if newsen=="":
#                 newsen=newsen+newword
#                 newword=""
#             else:
#                 newsen=newword+" "+newsen
#                 newword=""
#         i+=1
#     return newsen
# print(revpos(str))


#wap to check  string is panagrome

# def filter(str):
#     nstr=""
#     for i in range(len(str)):
#         if "A"<=str[i]<="Z":
#             nstr=nstr+chr(ord(str[i])+32)
#         elif "a"<=str[i]<="z":
#             nstr=nstr+str[i]
#         elif "0"<=str[i]<="9":
#             nstr=nstr+str[i]
#     return nstr
# def panagrome(str):
#     hash=[0]*26
#
#     s1=filter(str)
#     if len(s1)<26:
#         return False
#
#     for i in range(len(s1)):
#         hash[ord(s1[i])-97]+=1
#     for i in range(len(hash)):
#         if hash[i]==0:
#             return False
#
#     return True
#
# str="Abcdefghijklmnopqrstuvw!@"
# ref=panagrome(str)
# if ref:
#     print("it is palangrome")
# else:
#     print("it is not palangrome")
#

#wap to check string is palindrome

def filter(str):
    nstr=""
    for i in range(len(str)):
        if "A"<=str[i]<="Z":
            nstr=nstr+chr(ord(str[i])+32)
        elif "a"<=str[i]<="z":
            nstr=nstr+str[i]
        elif "0"<=str[i]<="9":
            nstr=nstr+str[i]
    return nstr
def palindrome(str):
    s1=filter(str)
    i=0
    j=len(s1)-1
    while i<=j:
        if s1[i]!=s1[j]:
            return False
        i+=1
        j-=1
    return True
str=input("enter the string")
ref=palindrome(str)
if ref:
    print("it is palindrme")
else:
    print("it is not palindrome")

# WAP to print the longest palindrome in a given sentence along withit'slength.
# def filter(str):
#     nstr=""
#     for i in range(len(str)):
#         if "A"<=str[i]<="Z":
#             nstr=nstr+chr(ord(str[i])+32)
#         elif "a"<=str[i]<="z":
#             nstr=nstr+str[i]
#         elif "0"<=str[i]<="9":
#             nstr=nstr+str[i]
#     return nstr
# def palindrome(str):
#     s1=filter(str)
#     i=0
#     j=len(s1)-1
#     while i<=j:
#         if s1[i]!=s1[j]:
#             return False
#         i+=1
#         j-=1
#     return True
# def sen(str):
#     str = str + " "
#     s3 = ""
#     max1 = -10 ** 5
#     nword = ""
#     for i in range(len(str)):
#
#         if str[i]!=" ":
#             nword=nword+str[i]
#
#         elif nword!="":
#             s1=palindrome(nword)
#
#             if s1:
#
#                 if max1<len(nword):
#                     s3=nword
#                     max1=len(nword)
#             nword=""
#     return s3,max1
# str=input("enter the string")
# print(sen(str))
#


#WAP to print the shortest palindrome in a given sentence along withit'slength.
# def filter(str):
#     nword=""
#     for i in range(len(str)):
#         if "A"<=str[i]<="Z":
#             nword=nword+chr(ord(str[i])+32)
#         elif "a"<=str[i]<="z":
#             nword=nword+str[i]
#         elif "0"<=str[i]<="9":
#             nword=nword+str[i]
#     return nword
# def palindrome(str):
#     s1=filter(str)
#     i=0
#     j=len(s1)-1
#     while i<=j:
#         if s1[i]!=s1[j]:
#             return False
#         i+=1
#         j-=1
#     return True
# def sen(str):
#     nword=""
#     max1=10**9
#     word=""
#     str=str+" "
#     for i in range(len(str)):
#         if str[i]!=" ":
#             nword=nword+str[i]
#         elif nword!="":
#             s1=palindrome(nword)
#             if s1:
#                 if max1>len(nword):
#                     max1=len(nword)
#                     word=nword
#             nword=""
#     return word,max1
# str=input()
# print(sen(str))


#WAP to print the largest count of continuous palindromic words inagivensentence
# def filter(str):
#     nword=""
#     for i in range(len(str)):
#         if "A"<=str[i]<="Z":
#             nword=nword+chr(ord(str[i])+32)
#         elif "a"<=str[i]<="z":
#             nword=nword+str[i]
#         elif "0"<=str[i]<="9":
#             nword=nword+str[i]
#     return nword
# def palindrome(str):
#     s=filter(str)
#     i=0
#     j=len(s)-1
#     while i<=j:
#         if s[i]!=s[j]:
#             return False
#         i+=1
#         j-=1
#     return True
# def sen(str):
#     nword=""
#     count=0
#     max1=0
#     str=str+" "
#     for i in range(len(str)):
#         if str[i]!=" ":
#             nword=nword+str[i]
#         elif nword!="":
#             s1=palindrome(nword)
#             if s1:
#                 count+=1
#                 max1=max(max1,count)
#             else:
#                 count=0
#
#             nword=""
#     return max1
# str=input()
# print(sen(str))

#WAP to print the shortest count of continuous palindromic words inagiven sentence

# def filter(str):
#     nword=""
#     for i in range(len(str)):
#         if "A"<=str[i]<="Z":
#             nword=nword+chr(ord(str[i])+32)
#         elif "a"<=str[i]<="z":
#             nword=nword+str[i]
#         elif "0"<=str[i]<="9":
#             nword=nword+str[i]
#     return nword
# def palindrome(str):
#     s=filter(str)
#     i=0
#     j=len(s)-1
#     while i<=j:
#         if s[i]!=s[j]:
#             return False
#         i+=1
#         j-=1
#     return True
# def sen(str):
#     nword=""
#     count=0
# 
#     min1=10**9
#     str=str+" "
#     for i in range(len(str)):
#         if str[i]!=" ":
#             nword=nword+str[i]
#         elif nword!="":
#             s1=palindrome(nword)
#             if s1:
#                 count+=1
# 
#             else:
#                 if count > 0:
#                     min1= min(min1,count)
#                     count=0
# 
# 
# 
# 
#             nword=""
#     return min1
# str=input()
# print(sen(str))


WAP to print the count of total palindromic words in a given sentence

# def filter(str):
#     nword=""
#     for i in range(len(str)):
#         if "A"<=str[i]<="Z":
#             nword=nword+chr(ord(str[i])+32)
#         elif "a"<=str[i]<="z":
#             nword=nword+str[i]
#         elif "0"<=str[i]<="9":
#             nword=nword+str[i]
#     return nword
# def paindrome(str):
#     s1=filter(str)
#     i=0
#     j=len(s1)-1
#     while i<=j:
#         if s1[i]!=s1[j]:
#             return False
#         i+=1
#         j-=1
#     return True
# def sen(str):
#     nword=""
#     count=0
#     str=str+" "
#     for i in range(len(str)):
#         if str[i]!=" ":
#             nword=nword+str[i]
#         elif nword!="":
#             s=paindrome(nword)
#             if s:
#                 count+=1
#             nword=""
#     return count
# str=input()
# print(sen(str))
#

#WAP to display count of integer palindromes in a given string
def filter(str):
    nword=""
    for i in range(len(str)):

        if "0"<=str[i]<="9":
            nword=nword+str[i]

    return nword
def paindrome(str):
    s1=filter(str)
    if s1=="":
        return False
    else:
        i=0
        j=len(s1)-1
        while i<=j:
            if s1[i]!=s1[j]:
                return False
            i+=1
            j-=1
        return True
def sen(str):
    nword=""
    count=0
    str=str+" "
    for i in range(len(str)):
        if str[i]!=" ":
            nword=nword+str[i]
        elif nword!="":
            s=paindrome(nword)
            if s:
                count+=1
            nword=""
    return count
str=input()
print(sen(str))





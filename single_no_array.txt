class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        xor1=0
        for i in range(len(nums)):
            xor1=nums[i]^xor1
            
        return xor1

or


class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        hash=[]
        max1=0
        for i in range(len(nums)):
            max1=max(nums[i],max1)
        for i in range(max1+1):
            hash.append(0)
        for i in range(len(nums)):
            hash[nums[i]]+=1
        for i in range(1,len(hash)):
            if hash[i]==1:
                return i

or


class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        hash = {}
        
        # Count the frequency of each number in the list
        for num in nums:
            hash[num] = hash.get(num, 0) + 1
        
        # Find the number that appears only once
        for num in hash:
            if hash[num] == 1:
                return num

